jobs:
  export1:
    environment: production
    name: Build and Export (all but MacOS)
    outputs:
      build_date: ${{ steps.determineExportVersion.outputs.build_date }}
      mc_version: ${{ steps.determineExportVersion.outputs.mc_version }}
      mcr_version: ${{ steps.determineExportVersion.outputs.mcr_version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      if: github.repository != 'MCreator/MCreator' && github.repository != 'KlemenDEV/MCreator'
      name: Verify Repository
      run: "cat << EOF\n\u26A0\uFE0FDeploy action is only intended to be run from\
        \ the official MCreator's repository. \u26A0\uFE0F\nWe do not allow custom\
        \ distributions of the software under MCreator brand to be distributed publicly.\n\
        For more information, read LICENSE.txt.\nEOF\nexit 1\n"
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17.0.10+7
    - continue-on-error: true
      name: Install Dependencies
      run: 'sudo apt-get install -y mkisofs nsis nsis-pluginapi

        wget https://nsis.sourceforge.io/mediawiki/images/d/d3/LockedList.zip

        sudo unzip LockedList.zip -d /usr/share/nsis/

        '
    - continue-on-error: true
      if: github.event.inputs.release-type == 'release'
      name: Build and Export Release Using Gradle
      run: xvfb-run -a ./gradlew generateExportReport exportWindows exportLinux
    - continue-on-error: true
      if: github.event.inputs.release-type == 'snapshot'
      name: Build and Export Snapshot Using Gradle
      run: xvfb-run -a ./gradlew generateExportReport exportWindows exportLinux -Psnapshot=true
    - continue-on-error: true
      id: determineExportVersion
      name: Determine Export Version
      run: 'MCR_VERSION=$(cat build/reports/export.txt | grep "mcreator=" | cut -d''=''
        -f2)

        MC_VERSION=$(cat build/reports/export.txt | grep "minecraft=" | cut -d''=''
        -f2)

        BUILD_DATE=$(cat build/reports/export.txt | grep "builddate=" | cut -d''=''
        -f2)

        echo "MCR_VERSION=$MCR_VERSION" >> $GITHUB_ENV

        echo "MC_VERSION=$MC_VERSION" >> $GITHUB_ENV

        echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV

        echo "mcr_version=$MCR_VERSION" >> $GITHUB_OUTPUT

        echo "mc_version=$MC_VERSION" >> $GITHUB_OUTPUT

        echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Upload Binaries and Tag Release
      uses: svenstaro/upload-release-action@04733e069f2d7f7f0b4aebc4fbdbce8613b03ccd
      with:
        body: '### **Download: https://mcreator.net/download**

          ### Changelog: https://mcreator.net/changelog

          <!--[[ { "minecraft": "${{ env.MC_VERSION }}" } ]]-->

          '
        file: build/export/*
        file_glob: true
        overwrite: true
        prerelease: ${{ github.event.inputs.release-type == 'snapshot' }}
        release_name: ${{ env.MCR_VERSION }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.MCR_VERSION }}
  export2:
    environment: production
    name: Build and Export (only MacOS)
    needs: export1
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17.0.10+7
    - continue-on-error: true
      name: Install Dependencies
      run: 'brew install create-dmg

        '
    - continue-on-error: true
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        MACOS_CI_KEYCHAIN_PWD: ${{ secrets.MACOS_CI_KEYCHAIN_PWD }}
        MACOS_NOTARIZATION_APPLE_ID: ${{ secrets.MACOS_NOTARIZATION_APPLE_ID }}
        MACOS_NOTARIZATION_PWD: ${{ secrets.MACOS_NOTARIZATION_PWD }}
        MACOS_NOTARIZATION_TEAM_ID: ${{ secrets.MACOS_NOTARIZATION_TEAM_ID }}
      name: Prepare Keychain
      run: 'echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12


        security create-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain

        security default-keychain -s build.keychain

        security unlock-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain

        security set-keychain-settings -t 3600 -u build.keychain


        security import certificate.p12 -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
        -k ~/Library/Keychains/build.keychain

        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_CI_KEYCHAIN_PWD"
        build.keychain


        xcrun notarytool store-credentials "notarytool-profile" --apple-id "$MACOS_NOTARIZATION_APPLE_ID"
        --team-id "$MACOS_NOTARIZATION_TEAM_ID" --password "$MACOS_NOTARIZATION_PWD"

        '
    - continue-on-error: true
      env:
        MACOS_CERTIFICATE_NAME: ${{ secrets.MACOS_CERTIFICATE_NAME }}
      if: github.event.inputs.release-type == 'release'
      name: Build and Export Release Using Gradle
      run: ./gradlew generateExportReport exportMac -Pbuilddate=${{ needs.export1.outputs.build_date
        }}
    - continue-on-error: true
      env:
        MACOS_CERTIFICATE_NAME: ${{ secrets.MACOS_CERTIFICATE_NAME }}
      if: github.event.inputs.release-type == 'snapshot'
      name: Build and Export Snapshot Using Gradle
      run: ./gradlew generateExportReport exportMac -Psnapshot=true -Pbuilddate=${{
        needs.export1.outputs.build_date }}
    - continue-on-error: true
      name: Upload Binaries and Tag Release
      uses: svenstaro/upload-release-action@04733e069f2d7f7f0b4aebc4fbdbce8613b03ccd
      with:
        body: '### **Download: https://mcreator.net/download**

          ### Changelog: https://mcreator.net/changelog

          <!--[[ { "minecraft": "${{ needs.export1.outputs.mc_version }}" } ]]-->

          '
        file: build/export/*
        file_glob: true
        overwrite: true
        prerelease: ${{ github.event.inputs.release-type == 'snapshot' }}
        release_name: ${{ needs.export1.outputs.mcr_version }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ needs.export1.outputs.mcr_version }}
name: Deploy binaries
on:
  repository_dispatch:
    types: trigger-ga___deploy.yml
